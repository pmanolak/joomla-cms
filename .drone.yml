kind: pipeline
name: package

steps:
  - name: packager
    image: joomlaprojects/docker-images:packager
    environment:
      HTTP_ROOT: "https://artifacts.joomla.org/drone"
      DRONE_PULL_REQUEST: DRONE_PULL_REQUEST
      DRONE_COMMIT: DRONE_COMMIT
    commands:
      - /bin/drone_prepare_package.sh

  - name: upload
    image: joomlaprojects/docker-images:packager
    environment:
      package_key:
        from_secret: package_key
      package_user:
        from_secret: package_user
      package_host:
        from_secret: package_host
      package_root:
        from_secret: package_root
      GITHUB_TOKEN:
        from_secret: github_token
    commands:
      - mkdir -p ~/.ssh
      - eval $(ssh-agent -s)
      - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
      - echo "$package_key" > ~/.ssh/id_rsa
      - chmod 600 ~/.ssh/id_rsa
      - ssh-add
      - rclone config create package sftp host $package_host user $package_user port 22
      - rclone copy ./upload/ package:$package_root/$DRONE_REPO/$DRONE_BRANCH/$DRONE_PULL_REQUEST/downloads/$DRONE_BUILD_NUMBER
      - /bin/add_github_status.sh "Download" "Prebuilt packages are available for download." "https://artifacts.joomla.org/drone/${DRONE_REPO}/${DRONE_BRANCH}/${DRONE_PULL_REQUEST}/downloads/${DRONE_BUILD_NUMBER}"

trigger:
  repo:
    - joomla/joomla-cms

---
kind: pipeline
name: nightly_build

steps:
  - name: prepare
    image: joomlaprojects/docker-images:packager
    commands:
      - export MINORVERSION=${DRONE_BRANCH%-*}
      - composer --version
      - mkdir -p transfer
      - date +%s > transfer/$MINORVERSION-time.txt
      - git rev-parse origin/$MINORVERSION-dev > transfer/$MINORVERSION.txt
      - php build/build.php --remote=origin/$MINORVERSION-dev --exclude-gzip --disable-patch-packages
      - mv build/tmp/packages/* transfer/
      - php build/build.php --remote=origin/$MINORVERSION-dev --exclude-zip --exclude-gzip --exclude-bzip2 --debug-build
      - mv build/tmp/packages/* transfer/

  - name: upload
    image: joomlaprojects/docker-images:packager
    environment:
      nightly_key:
        from_secret: nightly_key
      nightly_user:
        from_secret: nightly_user
      nightly_host:
        from_secret: nightly_host
      MATTERMOST_NIGHTLY_HOOK:
        from_secret: mattermost_nightly_hook
    commands:
      - export MINORVERSION=${DRONE_BRANCH%-*}
      - mkdir -p ~/.ssh
      - eval $(ssh-agent -s)
      - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
      - echo "$nightly_key" > ~/.ssh/id_rsa
      - chmod 600 ~/.ssh/id_rsa
      - ssh-add
      - rclone config create nightly sftp host $nightly_host user $nightly_user port 22
      - rclone delete nightly:/home/devj/public_html/nightlies/ --include "Joomla_$MINORVERSION.*"
      - rclone delete nightly:/home/devj/public_html/cache/com_content/
      - rclone copy ./transfer/ nightly:/home/devj/public_html/nightlies/
      - curl -i -X POST -H 'Content-Type:application/json' -d '{"text":"Nightly Build for [Joomla ${MINORVERSION}](https://developer.joomla.org/nightly-builds.html) successfully built."}' $MATTERMOST_NIGHTLY_HOOK

  - name: buildfailure
    image: joomlaprojects/docker-images:packager
    environment:
      MATTERMOST_NIGHTLY_HOOK:
        from_secret: mattermost_nightly_hook
    commands:
      - export MINORVERSION=${DRONE_BRANCH%-*}
      - curl -i -X POST -H 'Content-Type:application/json' -d '{"text":"Nightly Build for [Joomla ${MINORVERSION}](https://developer.joomla.org/nightly-builds.html) FAILED to built."}' $MATTERMOST_NIGHTLY_HOOK
    when:
      status:
        - failure

trigger:
  event:
    - cron
    - custom
  repo:
    - joomla/joomla-cms

---
kind: signature
hmac: 8c9f8d28fda74e2a6fc508602dd07e9af7d9f4a5a13af769c6a53e6bd6e91389

...
